from aiogram import types, Dispatcher, F
from aiogram.filters import Command, CommandStart
from data_base import sqlite_db
from aiogram.filters import ChatMemberUpdatedFilter, IS_NOT_MEMBER, IS_MEMBER
from aiogram.types import ChatMemberUpdated


from aiogram.types import KeyboardButton, ReplyKeyboardMarkup

b1 = KeyboardButton(text='üïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã')
b2 = KeyboardButton(text='üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ') 
b3 = KeyboardButton(text='üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã/–∑–∞–ø–∏—Å—å')
b4 = KeyboardButton(text='üíÖ –ü—Ä–∞–π—Å')

kb_client = ReplyKeyboardMarkup(
    keyboard=[
        [b1, b2],
        [b3, b4]
        
    ],
    resize_keyboard=True,
    one_time_keyboard=False,
    input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ...'
)

async def command_start(message: types.Message):
    try:
        await message.answer(
            '‚ú® –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SugarNail! ‚ú®\n\n'
            '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:', 
            reply_markup=kb_client
        )
    except Exception as e:
        await message.reply('–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –õ–°, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–º—É:\nhttps://t.me/Sugar_NailBot')
        
async def test_cenz_command(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω–∑—É—Ä—ã"""
    test_info = (
        "üß™ <b>–¢–µ—Å—Ç —Ü–µ–Ω–∑—É—Ä—ã</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—ã–º —Å–ª–æ–≤–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /test_cenz –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
    )
    await message.answer(test_info, parse_mode='HTML')

# –ö–û–ú–ê–ù–î–ê –î–õ–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø ID 
async def get_my_id(message: types.Message):
    
    user_info = (
        f"üë§ <b>–í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
        f"üÜî ID: <code>{message.from_user.id}</code>\n"
        f"üë§ –ò–º—è: {message.from_user.first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}\n"
        f"üë• –§–∞–º–∏–ª–∏—è: {message.from_user.last_name or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n"
        f"üîó Username: @{message.from_user.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"üí¨ –Ø–∑—ã–∫: {message.from_user.language_code or '–ù–µ —É–∫–∞–∑–∞–Ω'}"
    )
    await message.answer(user_info, parse_mode='HTML')
    await message.answer("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à ID –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ —Ñ–∞–π–ª admin.py", reply_markup=kb_client)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
async def nail_open_command(message: types.Message):
    if message.text in ['üïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã','üïí –†–µ–∂–∏–º_—Ä–∞–±–æ—Ç—ã', '/–†–µ–∂–∏–º_—Ä–∞–±–æ—Ç—ã']:
        await message.answer(
            'üïí <b>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:</b>\n'
            '–ü–Ω-–ü—Ç: —Å 10:00 –¥–æ 20:00\n'
            '–°–± : —Å 11:00 –¥–æ 15:00\n'
            '–í—Å : –í–´–•–û–î–ù–û–ô\n\n'
            '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É:', 
            reply_markup=kb_client,
            parse_mode='HTML'
        )

async def nail_place_command(message: types.Message):
    if message.text in ['üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ', '/–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ']:
        await message.answer(
            'üìç <b>–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b>\n'
            '—É–ª. –ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è 74, –æ—Ñ–∏—Å 305\n\n'
            '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É:', 
            reply_markup=kb_client,
            parse_mode='HTML'
        )

async def nail_insta_command(message: types.Message):
    if message.text in ['üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã/–∑–∞–ø–∏—Å—å', '/–ö–æ–Ω—Ç–∞–∫—Ç—ã/–∑–∞–ø–∏—Å—å']:
        await message.answer(
            'üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã/–∑–∞–ø–∏—Å—å:</b>\n'
            'üì± Instagram: https://instagram.com/sugarnail_khv\n'
            '‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: 8-914-545-36-19\n\n'
            '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É:', 
            reply_markup=kb_client,
            parse_mode='HTML'
        )

async def nail_price_command(message: types.Message):
    if message.text in ['üíÖ –ü—Ä–∞–π—Å', '/–ü—Ä–∞–π—Å']:
        await sqlite_db.sql_read(message)


def register_handlers_client(dp: Dispatcher):

    dp.message.register(command_start, CommandStart())     
    dp.message.register(test_cenz_command, Command('test_cenzura'))
    dp.message.register(get_my_id, Command('myid'))  

    dp.message.register(nail_open_command, F.text.in_(['üïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã', 'üïí –†–µ–∂–∏–º_—Ä–∞–±–æ—Ç—ã', '–†–µ–∂–∏–º_—Ä–∞–±–æ—Ç—ã']))
    dp.message.register(nail_place_command, F.text.in_(['üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ', '–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ']))
    dp.message.register(nail_insta_command, F.text.in_(['üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã/–∑–∞–ø–∏—Å—å', '–ö–æ–Ω—Ç–∞–∫—Ç—ã/–∑–∞–ø–∏—Å—å']))
    dp.message.register(nail_price_command, F.text.in_(['üíÖ –ü—Ä–∞–π—Å', '–ü—Ä–∞–π—Å']))
    
    dp.message.register(nail_open_command, Command('–†–µ–∂–∏–º_—Ä–∞–±–æ—Ç—ã'))   
    dp.message.register(nail_place_command, Command('–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ'))
    dp.message.register(nail_insta_command, Command('–ö–æ–Ω—Ç–∞–∫—Ç—ã/–∑–∞–ø–∏—Å—å'))
    dp.message.register(nail_price_command, Command('–ü—Ä–∞–π—Å'))
